task :default do
  sh 'rake -T'
end

desc 'fmt'
task :fmt do
  sh 'cargo fmt'
  sh 'find . -type f -name "*.rs.bk"|xargs rm -rf'
end

desc 'test'
task :test do
  sh 'cargo test -- --nocapture'
end

namespace :deps do
  desc 'outdated'
  task :outdated do
    sh 'cargo outdated'
  end
end

namespace :dev do
  desc 'prepare'
  task :prepare do
    sh 'sudo apt-get install postgresql-server-dev-all'
    sh 'rm `which diesel`;cd /tmp;cargo install diesel_cli --no-default-features --features postgres'
    sh 'echo DATABASE_URL=postgres://postgres:postgres@localhost/deftype_dev > .env'
    sh 'diesel setup'
  end

  namespace :info do
    desc 'diesel-cli'
    task 'diesel-cli' do
      puts 'diesel migration generate create_posts_table'
      puts 'diesel migration run'
      puts 'diesel migration redo'
    end
  end

  namespace :mock do
    desc 'error'
    task :error do
      sh 'http ":3000/_dev/mock/error"'
    end
  end

  desc 'cloc'
  task :cloc do
    file = 'cloc_history.log.md'

    sh "date >> #{file}"
    sh "echo '' >> #{file}"
    sh "echo '```' >> #{file}"
    sh "cloc . >> #{file}"
    sh "echo '```' >> #{file}"
    sh "echo '' >> #{file}"
  end
end

namespace :db do
  desc 'migrate'
  task :migrate do
    sh 'diesel migration run'
  end

  desc 'repl'
  task :repl do
    # sh 'psql -h localhost -U postgres -W -d deftype_dev'
    sh 'PGPASSWORD=postgres psql -h localhost -U postgres -d deftype_dev'
  end

  desc 'init'
  task :init do
    sh 'PGPASSWORD=postgres psql -h localhost -U postgres -c "drop database deftype_dev"; diesel setup'
    sh 'rake db:migrate'
  end
end

namespace :source do
  desc 'check'
  task :check do
    sh 'cargo clippy --bin server'
    sh 'cargo clippy --bin bcrypt'
  end
end

namespace :run do
  desc 'dev'
  task :dev do
    # fork do
    #   sleep(2)
    #   sh 'xdg-open http://localhost:3000 > /dev/null'
    # end
    sh 'RUST_BACKTRACE=1 cargo run --bin server'
  end
  task :prod do
    sh 'RUN_MODE=production cargo run --release --bin server'
  end
end

desc 'clean'
task :clean do
  sh 'cargo clean'
end
